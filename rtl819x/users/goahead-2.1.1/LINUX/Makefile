#


#Makefile for the GoAhead web server reference source base
#  for the Linux OS
#
# Copyright (c) GoAhead Software, Inc. 1995-2000
#
# $Id: Makefile,v 1.27 2009/08/24 10:30:12 bradhuang Exp $
#

#hf_shi testing for temp
ifdef CONFIG_RTL_8198_AP_ROOT
AP=1
else
GW=1
endif
#hf add end
all: compile

ARCH	= libwebs.a

SYSCONFIG_DIR=./system

NAME_VPN = webs-vpn
NAME_GW	= webs-gw
NAME_AP = webs-ap
FLASH_VPN = flash-vpn
FLASH_GW = flash-gw
FLASH_AP = flash-ap

CC	= rsdk-linux-gcc

AR	= rsdk-linux-ar

# User Management switch
UMSW	= -DUSER_MANAGEMENT_SUPPORT

# TLS client mode support
#TLS= -DTLS_CLIENT


# WLAN support
#-DWLAN_EASY_CONFIG
WLANSUPP= -DUNIVERSAL_REPEATER -DWLAN_WPA -DWLAN_WDS -DWLAN_8185AG -DWLAN_WPA2 $(TLS)
WLANSUPP += -DWIFI_SIMPLE_CONFIG

# Digest Access switch
DASW	= -DDIGEST_ACCESS_SUPPORT

#Record which files need not include
EXCLUDE_ASP = 

# Gateway flag
GATEWAY = -DHOME_GATEWAY -DDOS_SUPPORT
ifeq ($(GW),1)
GATEWAY += -DROOT_FS
endif

#pocket AP and biwlan must defined after 96C and 98, otherwise the CONFIG_FILE and CONFIG_DAT values are wrong.
CONFIG_FILE = 
CONFIG_DAT = 
# have VPN support
VPN = -DVPN_SUPPORT
# SSL switches (enable all to activate)
# SSLINC = /RSASSL/library/include
# SSLLIB = /RSASSL/library/lib/libsslc.a
# SSLSW	= -DWEBS_SSL_SUPPORT -I$(SSLINC)
# SSLPATCHFILE = ../websSSL.o

# If-Modified-Support switches (requires math library, libm.a)
# IFMODSW = -DWEBS_IF_MODIFIED_SUPPORT
# IFMODLIB = /usr/lib/libm.a

include $(DIR_LINUX)/.config
include $(DIR_USERS)/.config

# routing support
ifeq ($(CONFIG_APP_ROUTED), y)
ROUTE += -DROUTE_SUPPORT
CFLAGS += -DROUTE_SUPPORT
NEWADDEDCFLAGS += -DROUTE_SUPPORT
else
ROUTE =
EXCLUDE_ASP += ! -name route.asp ! -name routetbl.asp
endif

#SNMPD support
ifeq ($(CONFIG_APP_SNMP), y)
APMIB_SHARED = 1
else
APMIB_SHARED = 0
endif

ifeq ($(CONFIG_RTK_VLAN_SUPPORT),y)
VLAN_CONFIG_SUPPORTED = 1
endif

ifeq ($(CONFIG_HTTP_FILE_SERVER_SUPPORT),y)
HTTP_FILE_SERVER_SUPPORTED = 1
else
HTTP_FILE_SERVER_SUPPORTED = 0
endif

INCLUDE_SYSCONF = 1

ifeq ($(INCLUDE_SYSCONF),1)
SYSCONFIG_GW = sysconf-gw
SYSCONFIG_AP = sysconf-ap
INTERNET_PPP=ppp_inet
INTERNET_NTP=ntp_inet
INTERNET_DDNS=ddns_inet

else
SYSCONFIG_GW = 
SYSCONFIG_AP = 
INTERNET_PPP = 
INTERNET_NTP= 
INTERNET_DDNS=

endif

#for 11s mesh
ifeq ($(CONFIG_MESH_ENABLE),y)
        SUBDIRS += 11s-PathSelection
        #MESH_EXTRA_CONFIG_FLAGS += -DCONFIG_RTK_MESH -D_MESH_ACL_ENABLE_ -DSNMP_SUPPORT -DCONFIG_NEW_MESH_UI
        MESH_EXTRA_CONFIG_FLAGS += -DCONFIG_RTK_MESH -D_MESH_ACL_ENABLE_ -DCONFIG_NEW_MESH_UI
        ifeq ($(CONFIG_TEST_PKG),y)
                #SUBDIRS += test_traffic netperf-2.4.4 
                #SUBDIRS += test_traffic
               MESH_EXTRA_CONFIG_FLAGS += -D_11s_TEST_MODE_
                TESTPKG=1
        endif
        ifeq ($(CONFIG_NMS),y)
                #SUBDIRS += net-snmp-5.2.3 nmsd burn_image
		MESH_EXTRA_CONFIG_FLAGS += -DSNMP_SUPPORT
                NMS=1
        endif
        TESTPKG?=0
        NMS?=0
else
	EXCLUDE_ASP = ! -name buffalo.asp ! -name bull.asp ! -name wlmesh.asp ! -name wlmeshinfo.asp ! -name wlmeshACL.asp
endif
export MESH_EXTRA_CONFIG_FLAGS

ifndef VLAN_CONFIG_SUPPORTED
	EXCLUDE_ASP +=  ! -name vlan.asp
endif

ifneq ($(CONFIG_PCIE_POWER_SAVING),y)	
	EXCLUDE_ASP +=  ! -name powerConsumption.asp ! -name powerConsumption_data.asp ! -name powerConsumption_proc.sxsl
	EXCLUDE_ASP +=  ! -name num-0.gif ! -name num-1.gif ! -name num-2.gif ! -name num-3.gif ! -name num-4.gif ! -name num-5.gif
	EXCLUDE_ASP +=  ! -name num-6.gif ! -name num-7.gif ! -name num-8.gif ! -name num-9.gif ! -name dot.gif ! -name num-0.gif
	EXCLUDE_ASP +=  ! -name xml_data.js
endif
ifeq ($(HTTP_FILE_SERVER_SUPPORTED),0)
EXCLUDE_ASP+=! -name http_files.asp
EXCLUDE_ASP+=! -name http_files.asp
EXCLUDE_ASP+=! -name usb_conninfo.asp
endif

WLANSUPP +=  $(MESH_EXTRA_CONFIG_FLAGS)

ifeq ($(CONFIG_RTL8192CD),y)
        WLANSUPP += -DCONFIG_RTL8192CD
endif

ifeq ($(CONFIG_RTL8196B_GW_8M),y)
	WLANSUPP += -DCONFIG_RTL8196B_GW_8M
endif

# goahead SSL support
#OPENSSL = 1
ifeq ($(CONFIG_USER_HTTPS_WITH_MATRIXSSL),y)
MATRIXSSL = 1
endif

ifeq ($(strip $(OPENSSL)),1)
SSLINC = ../../auth/Package/openssl-0.9.7b/include
SSLLIB =  ../../auth/Package/libssl.a  ../../auth/Package/libcrypto.a
#-lkrb5
SSLSW	= -DOPENSSL -DWEBS_SSL_SUPPORT -I$(SSLINC)
SSLPATCHFILE = ../websSSL.o
endif

ifeq ($(strip $(MATRIXSSL)),1)
SSLINC = ../matrixssl/examples
SSLLIB =  ../matrixssl/src/libmatrixssl.a #-lpthread
SSLSW	= -DMATRIX_SSL  -DWEBS_SSL_SUPPORT -I$(SSLINC)
SSLPATCHFILE = ../matrix_ssl.o
MATRIXSSL = libmatrixssl.a
endif

# Dependencies
DEPEND_FILES	= ../asp.o ../balloc.o ../base64.o ../cgi.o ../default.o  \
				  ../ejlex.o ../ejparse.o ../form.o \
				  ../h.o ../handler.o ../mime.o ../misc.o ../page.o  \
				  ../ringq.o ../rom.o \
				  ../sock.o ../sockGen.o $(SSLPATCHFILE) \
				  ../security.o ../sym.o ../uemf.o ../url.o ../value.o \
				  ../md5c.o ../um.o ../umui.o ../websda.o ../emfdb.o \
				  ../webrom.o ../webs.o ../websuemf.o
				  
ifeq ($(HTTP_FILE_SERVER_SUPPORTED),1)
DEPEND_FILES += ../http_files.o
endif

ifeq ($(APMIB_SHARED),1)
REALTEK_GW_FILES = fmtcpip_gw.o utility_gw.o fmfwall_gw.o \
			fmget_gw.o fmwlan_gw.o fmmgmt_gw.o version_gw.o fmddns_gw.o fmroute_gw.o fmipv6_gw.o fmbt_gw.o fmpocketap_gw.o

REALTEK_VPN_FILES = fmtcpip_vpn.o utility_vpn.o fmfwall_vpn.o \
			fmget_vpn.o fmwlan_vpn.o fmmgmt_vpn.o version_vpn.o fmvpn.o fmddns_vpn.o fmroute_vpn.o

REALTEK_AP_FILES = fmtcpip_ap.o fmfwall_ap.o utility_ap.o \
			fmget_ap.o fmwlan_ap.o fmmgmt_ap.o version_ap.o
else
REALTEK_GW_FILES = apmib_gw.o fmtcpip_gw.o utility_gw.o mibtbl_gw.o fmfwall_gw.o \
			fmget_gw.o fmwlan_gw.o fmmgmt_gw.o version_gw.o fmddns_gw.o fmroute_gw.o fmipv6_gw.o fmbt_gw.o fmpocketap_gw.o

REALTEK_VPN_FILES = apmib_vpn.o fmtcpip_vpn.o utility_vpn.o mibtbl_vpn.o fmfwall_vpn.o \
			fmget_vpn.o fmwlan_vpn.o fmmgmt_vpn.o version_vpn.o fmvpn.o fmddns_vpn.o fmroute_vpn.o

REALTEK_AP_FILES = apmib_ap.o fmtcpip_ap.o fmfwall_ap.o utility_ap.o mibtbl_ap.o \
			fmget_ap.o fmwlan_ap.o fmmgmt_ap.o version_ap.o
ifeq ($(INCLUDE_SYSCONF),1)			
REALTEK_SYS_GW_FILES = set_init_gw.o set_firewall_gw.o set_bridge_gw.o set_wlanapp_gw.o sys_utility_gw.o set_wan_gw.o 
ifeq ($(CONFIG_IPV6), y)
REALTEK_SYS_GW_FILES += set_ipv6_gw.o
endif
REALTEK_SYS_AP_FILES = set_init_ap.o set_bridge_ap.o set_wlanapp_ap.o sys_utility_ap.o 	
REALTEK_INTERNET_PPP_FILES = sys_utility_gw.o
REALTEK_INTERNET_NTP_FILES = sys_utility_gw.o
REALTEK_INTERNET_DDNS_FILES = sys_utility_gw.o

else
REALTEK_SYS_GW_FILES = 
REALTEK_SYS_AP_FILES =  	
REALTEK_INTERNET_PPP_FILES = 
REALTEK_INTERNET_NTP_FILES = 
REALTEK_INTERNET_DDNS_FILES = 
endif
endif

ifeq ($(INCLUDE_SYSCONF),1)
REALTEK_SYS_GW_FILES = set_init_gw.o set_firewall_gw.o set_bridge_gw.o set_wlanapp_gw.o sys_utility_gw.o set_wan_gw.o
ifeq ($(CONFIG_IPV6), y)
REALTEK_SYS_GW_FILES += set_ipv6_gw.o
endif
REALTEK_SYS_AP_FILES = set_init_ap.o set_bridge_ap.o set_wlanapp_ap.o sys_utility_ap.o
REALTEK_INTERNET_PPP_FILES = sys_utility_gw.o
REALTEK_INTERNET_NTP_FILES = sys_utility_gw.o
REALTEK_INTERNET_DDNS_FILES = sys_utility_gw.o
 
else
REALTEK_SYS_GW_FILES =
REALTEK_SYS_AP_FILES =
REALTEK_INTERNET_PPP_FILES =
REALTEK_INTERNET_NTP_FILES =
REALTEK_INTERNET_DDNS_FILES =
endif

ifeq ($(HTTP_FILE_SERVER_SUPPORTED),1)
REALTEK_GW_FILES +=fmhttp_files_gw.o
endif


ifeq ($(CONFIG_RSDK_rsdk-1.5.0-4181-EB-2.6.30-0.9.30.2),y)
SYS_FLAGS := -mips16
endif
ifeq ($(CONFIG_RSDK_rsdk-1.5.0-4181-EB-2.6.30-0.9.30.3),y)
SYS_FLAGS := -mips16
endif
CFLAGS	:= -fno-strict-aliasing -DWEBS -DUEMF -DOS="LINUX" -DLINUX $(WLANSUPP) $(UMSW) $(DASW) $(SSLSW) $(IFMODSW) -Os -DDOWN_SIZE $(ROUTE)

# This flag is only used to compile apmib of flash tool
CFLAGS_FLASH := -Os

ifdef CONFIG_DEFAULTS_KERNEL_2_6
CFLAGS  += -DCONFIG_DEFAULTS_KERNEL_2_6
endif

ifeq ($(CONFIG_APP_USBMOUNT),y)
CFLAGS += -DCONFIG_APP_USBMOUNT
endif

ifeq ($(CONFIG_USBDISK_UPDATE_IMAGE),y)
CFLAGS += -DCONFIG_USBDISK_UPDATE_IMAGE
endif

ifeq ($(CONFIG_APP_SAMBA),y)
CFLAGS  += -DCONFIG_APP_SAMBA 
endif

ifeq ($(CONFIG_APP_DLNA_DMS),y)
CFLAGS  += -DCONFIG_APP_DLNA_DMS 
endif

ifeq ($(CONFIG_APP_CTORRENT), y)
CFLAGS += -DCONFIG_RTL_BT_CLIENT
else
EXCLUDE_ASP += ! -name bt.asp ! -name btnewtorrent.asp ! -name btclient.asp
endif

ifeq ($(CONFIG_APP_SNMP),y)
CFLAGS += -DCONFIG_SNMP
endif

ifeq ($(CONFIG_RTL_IVL_SUPPORT),y)
CFLAGS  += -DCONFIG_RTL_IVL_SUPPORT 
endif

ifeq ($(CONFIG_RTL_FLASH_DUAL_IMAGE_ENABLE),y)
CFLAGS  += -DCONFIG_RTL_FLASH_DUAL_IMAGE_ENABLE 
endif

ifeq ($(CONFIG_USB_SERIAL_OPTION),y)
CFLAGS  += -DRTK_USB3G
#ifeq ($(CONFIG_POCKET_ROUTER_SUPPORT),y)
#CFLAGS += -DRTK_USB3G_PORT5_LAN
#endif
endif

#CONFIG_RTL_DUAL_PCIESLOT_BIWLAN_D
ifeq ($(CONFIG_RTL_DUAL_PCIESLOT_BIWLAN_D),y)
CFLAGS += -DCONFIG_RTL_92D_DMDP  -DCONFIG_RTL_DUAL_PCIESLOT_BIWLAN_D -DFOR_DUAL_BAND
NEWADDEDCFLAGS  += -DCONFIG_RTL_92D_DMDP -DCONFIG_RTL_DUAL_PCIESLOT_BIWLAN_D 
endif


ifeq ($(CONFIG_RTL_92D_DMDP),y)
CFLAGS += -DFOR_DUAL_BAND
endif


OTHERS	= -DB_STATS -DB_FILL -DDEBUG
DEBUG	= -g -Wall
IFLAGS 	= -I..
LDFLAGS	= $(SSLLIB) $(IFMODLIB)

#
# Extra Feature Configuration
#
ifeq ($(HTTP_FILE_SERVER_SUPPORTED),1)
EXTRA_CONFIG_CFLAGS+=-DHTTP_FILE_SERVER_SUPPORTED
endif

CFLAGS += $(EXTRA_CONFIG_CFLAGS)

ifeq ($(SLINK),1)
CFLAGS  += -DCOMPACK_SIZE -ffunction-sections -fdata-sections
LDFLAGS += --static -s -Wl,--gc-sections
TARGET = $(NAME_AP) $(FLASH_AP)
NEWADDEDCFLAGS = -DCOMPACK_SIZE -ffunction-sections -fdata-sections
else

ifeq ($(AP),1)
TARGET = $(NAME_AP) $(FLASH_AP) $(SYSCONFIG_AP) webpages-ap.bin
else
ifeq ($(GW),1)
TARGET = $(NAME_GW) $(FLASH_GW) $(SYSCONFIG_GW) $(INTERNET_PPP) $(INTERNET_NTP) $(INTERNET_DDNS) webpages-gw.bin
else
ifeq ($(VPN),1)
TARGET = $(NAME_VPN) $(FLASH_VPN) webpages-vpn.bin
else
TARGET = $(NAME_GW) $(NAME_AP) $(NAME_VPN) $(FLASH_AP) $(FLASH_GW) $(FLASH_VPN) \
	webpages-gw.bin webpages-ap.bin webpages-vpn.bin
endif
endif
endif

NEWADDEDCFLAGS =
endif

# =========================================================
# added by Rock
# =========================================================
# rock: add voip support
# Check VOIP user app
ifeq ($(CONFIG_APP_RTK_VOIP),y)
# Check VOIP kernel driver
ifeq ($(CONFIG_RTK_VOIP),y)
VOIP_SUPPORT=1
endif
endif

ifeq ($(CONFIG_RTL_STP),y)
CFLAGS += -DCONFIG_RTL_STP
NEWADDEDCFLAGS += -DCONFIG_RTL_STP
endif

ifeq ($(CONFIG_BASEON_SCHEDULE_FILTER),y)
CFLAGS += -DCONFIG_SCH_FILTER
NEWADDEDCFLAGS += -DCONFIG_SCH_FILTER
endif

ifeq ($(CONFIG_IPV6),y)
CFLAGS += -DCONFIG_IPV6
NEWADDEDCFLAGS += -DCONFIG_IPV6
else
EXCLUDE_ASP += ! -name dhcp6s.asp ! -name dnsv6.asp ! -name ipv6_basic.asp ! -name radvd.asp ! -name tunnel6.asp
endif


ifeq ($(CONFIG_RTL_819X),y)
	CFLAGS += -DCONFIG_RTL_819X
	NEWADDEDCFLAGS += -DCONFIG_RTL_819X
endif

ifeq ($(CONFIG_RTL_8196B_GW),y)
	CFLAGS += -DCONFIG_RTL_8196B
	NEWADDEDCFLAGS += -DCONFIG_RTL_8196B
endif

ifeq ($(CONFIG_RTL_8196C_GW),y)
	CFLAGS += -DCONFIG_RTL_8196C
	NEWADDEDCFLAGS += -DCONFIG_RTL_8196C
	CONFIG_FILE = config-gw-96c.txt
	CONFIG_DAT = config-gw-96c.dat
endif

ifeq ($(CONFIG_RTL_8198_GW),y)
	CFLAGS += -DCONFIG_RTL_8198
	NEWADDEDCFLAGS += -DCONFIG_RTL_8198
	CONFIG_FILE = config-gw-98.txt
	CONFIG_DAT = config-gw-98.dat
endif

ifeq ($(CONFIG_RTL_8198_AP_ROOT),y)
        CFLAGS += -DCONFIG_RTL_8198 -DCONFIG_RTL_8198_AP_ROOT
ifdef CONFIG_8198_PORT5_GMII
	CFLAGS += -DGMII_ENABLED
endif
        NEWADDEDCFLAGS += -DCONFIG_RTL_8198 -DCONFIG_RTL_8198_AP_ROOT
ifdef CONFIG_8198_PORT5_GMII
	NEWADDEDCFLAGS += -DGMII_ENABLED
endif

ifeq ($(CONFIG_RTL_92D_SUPPORT),y)
        CONFIG_FILE = config-ap-98-92d.txt
        CONFIG_DAT = config-ap-98-92d.dat
endif

ifeq ($(CONFIG_RTL_92C_SUPPORT),y)
        CONFIG_FILE = config-ap-98-92c.txt
        CONFIG_DAT = config-ap-98-92c.dat
endif

endif

ifeq ($(CONFIG_POCKET_ROUTER_SUPPORT),y)
CFLAGS += -DCONFIG_POCKET_ROUTER_SUPPORT
endif

ifeq ($(CONFIG_POCKET_AP_SUPPORT),y)
CFLAGS += -DCONFIG_POCKET_AP_SUPPORT
endif

ifeq ($(CONFIG_DOMAIN_NAME_QUERY_SUPPORT),y)
CFLAGS += -DCONFIG_DOMAIN_NAME_QUERY_SUPPORT
CONFIG_FILE = config-gw-96c-pocket-domain.txt
CONFIG_DAT = config-gw-96c-pocket-domain.dat
endif

ifeq ($(CONFIG_RTL_DFS_SUPPORT),y)
	CFLAGS += -DCONFIG_RTL_DFS_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_RTL_DFS_SUPPORT
endif

ifeq ($(CONFIG_RTL_CLIENT_MODE_SUPPORT),y)
	CFLAGS += -DCONFIG_WLAN_CLIENT_MODE
	NEWADDEDCFLAGS += -DCONFIG_WLAN_CLIENT_MODE
endif
 
ifeq ($(CONFIG_RTL_REPEATER_MODE_SUPPORT),y)
	CFLAGS += -DCONFIG_WLAN_REPEATER_MODE
	NEWADDEDCFLAGS += -DCONFIG_WLAN_REPEATER_MODE
endif

ifeq ($(CONFIG_RTL_WDS_SUPPORT),y)
	CFLAGS += -DCONFIG_WLAN_WDS_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_WLAN_WDS_SUPPORT
endif

ifeq ($(CONFIG_RTL_VAP_SUPPORT),y)
	CFLAGS += -DCONFIG_WLAN_VAP_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_WLAN_VAP_SUPPORT
endif

ifeq ($(CONFIG_PCIE_POWER_SAVING),y)
CFLAGS += -DPOWER_CONSUMPTION_SUPPORT
endif

ifeq ($(CONFIG_DOMAIN_NAME_QUERY_SUPPORT),y)
REALTEK_GW_FILES +=fmdomain_query_gw.o
REALTEK_SYS_GW_FILES +=set_domain_query_gw.o
endif


ifeq ($(CONFIG_RTL_8196_SPI_FLASH),y)
	CFLAGS += -DCONFIG_RTL8196_SPI
	NEWADDEDCFLAGS += -DCONFIG_RTL8196_SPI
endif

ifeq ($(VLAN_CONFIG_SUPPORTED),1)
	CFLAGS += -DVLAN_CONFIG_SUPPORTED
	NEWADDEDCFLAGS += -DVLAN_CONFIG_SUPPORTED 
endif

ifeq ($(CONFIG_RTL_WAPI_SUPPORT),y)
	CFLAGS += -DCONFIG_RTL_WAPI_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_RTL_WAPI_SUPPORT
ifeq ($(CONFIG_RTL_WAPI_LOCAL_AS_SUPPORT),y)
CFLAGS += -DCONFIG_RTL_WAPI_LOCAL_AS_SUPPORT
NEWADDEDCFLAGS += -DCONFIG_RTL_WAPI_LOCAL_AS_SUPPORT
else
EXCLUDE_ASP += ! -name wlwapiCertManagement.asp ! -name  wlwapiDistribute.asp
endif
else
EXCLUDE_ASP += ! -name wlwapiCertManagement.asp ! -name  wlwapiDistribute.asp ! -name wlwapiRekey.asp ! -name  wlwapiinstallcert.asp
endif

ifeq ($(CONFIG_RTL_802_1X_CLIENT_SUPPORT),y)
	CFLAGS += -DCONFIG_RTL_802_1X_CLIENT_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_RTL_802_1X_CLIENT_SUPPORT
endif

#add mld snooping support
ifeq ($(CONFIG_IGMPV3_SUPPORT),y)
	CFLAGS += -DCONFIG_IGMPV3_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_IGMPV3_SUPPORT
endif

#add mld snooping support
ifeq ($(CONFIG_RTL_MLD_SNOOPING),y)
	CFLAGS += -DCONFIG_RTL_MLD_SNOOPING
	NEWADDEDCFLAGS += -DCONFIG_RTL_MLD_SNOOPING
endif

# 8198 and POCKET ROUTER support both wapi psk and wapi cert
# 8196C (not include POCKET ROUTER) only support wapi psk
ifeq ($(CONFIG_RTL_8196C_GW),y)
ifneq ($(CONFIG_POCKET_ROUTER_SUPPORT),y)
EXCLUDE_ASP += ! -name wlwapiCertManagement.asp ! -name  wlwapiDistribute.asp ! -name  wlwapiinstallcert.asp
endif
endif

ifeq ($(CONFIG_RTL_COMAPI_CFGFILE),y)
	CFLAGS += -DCONFIG_IWPRIV_INTF
	CFLAGS += -DCONFIG_RTL_COMAPI_CFGFILE
	NEWADDEDCFLAGS += -DCONFIG_RTL_COMAPI_CFGFILE
endif

ifeq ($(CONFIG_RTL_FLASH_MAPPING_ENABLE),y)
	CFLAGS += -DCONFIG_RTL_FLASH_MAPPING_ENABLE
	NEWADDEDCFLAGS += -DCONFIG_RTL_FLASH_MAPPING_ENABLE

ifdef CONFIG_RTL_HW_SETTING_OFFSET
	CFLAGS += -DCONFIG_RTL_HW_SETTING_OFFSET=$(CONFIG_RTL_HW_SETTING_OFFSET)	
	NEWADDEDCFLAGS += -DCONFIG_RTL_HW_SETTING_OFFSET=$(CONFIG_RTL_HW_SETTING_OFFSET)
endif

ifdef CONFIG_RTL_DEFAULT_SETTING_OFFSET
	CFLAGS += -DCONFIG_RTL_DEFAULT_SETTING_OFFSET=$(CONFIG_RTL_DEFAULT_SETTING_OFFSET)	
	NEWADDEDCFLAGS += -DCONFIG_RTL_DEFAULT_SETTING_OFFSET=$(CONFIG_RTL_DEFAULT_SETTING_OFFSET)	
endif

ifdef CONFIG_RTL_CURRENT_SETTING_OFFSET
	CFLAGS += -DCONFIG_RTL_CURRENT_SETTING_OFFSET=$(CONFIG_RTL_CURRENT_SETTING_OFFSET)	
	NEWADDEDCFLAGS += -DCONFIG_RTL_CURRENT_SETTING_OFFSET=$(CONFIG_RTL_CURRENT_SETTING_OFFSET)	
endif

ifdef CONFIG_RTL_WEB_PAGES_OFFSET
	CFLAGS += -DCONFIG_RTL_WEB_PAGES_OFFSET=$(CONFIG_RTL_WEB_PAGES_OFFSET)	
	NEWADDEDCFLAGS += -DCONFIG_RTL_WEB_PAGES_OFFSET=$(CONFIG_RTL_WEB_PAGES_OFFSET)	
endif

ifdef CONFIG_RTL_LINUX_IMAGE_OFFSET  
	CFLAGS += -DCONFIG_RTL_CODE_IMAGE_OFFSET=$(CONFIG_RTL_LINUX_IMAGE_OFFSET)	
	NEWADDEDCFLAGS += -DCONFIG_RTL_CODE_IMAGE_OFFSET=$(CONFIG_RTL_LINUX_IMAGE_OFFSET)	
endif

ifdef CONFIG_RTL_ROOT_IMAGE_OFFSET 
	CFLAGS += -DCONFIG_RTL_ROOT_IMAGE_OFFSET=$(CONFIG_RTL_ROOT_IMAGE_OFFSET)	
	NEWADDEDCFLAGS += -DCONFIG_RTL_ROOT_IMAGE_OFFSET=$(CONFIG_RTL_ROOT_IMAGE_OFFSET)	
endif
endif

ifeq ($(CONFIG_RTL_MULTI_LAN_DEV),y)
	CFLAGS += -DCONFIG_RTL_MULTI_LAN_DEV
	NEWADDEDCFLAGS += -DCONFIG_RTL_MULTI_LAN_DEV
endif

ifeq ($(CONFIG_RTL_HW_NAPT), y)
	CFLAGS += -DCONFIG_RTL_HW_NAPT
	NEWADDEDCFLAGS += -DCONFIG_RTL_HW_NAPT
endif

ifeq ($(CONFIG_RTL_LAYERED_DRIVER_ACL),y)
	CFLAGS += -DCONFIG_RTL_LAYERED_DRIVER_ACL
	NEWADDEDCFLAGS += -DCONFIG_RTL_LAYERED_DRIVER_ACL
endif

ifeq ($(CONFIG_RTK_VLAN_SUPPORT), y)
	CFLAGS += -DCONFIG_RTK_VLAN_SUPPORT
	NEWADDEDCFLAGS += -DCONFIG_RTK_VLAN_SUPPORT
endif

# For mini_upnp stand alone
CFLAGS += -DSTAND_ALONE_MINIUPNP
NEWADDEDCFLAGS += -DSTAND_ALONE_MINIUPNP

ifeq ($(CONFIG_RTL_92D_SUPPORT),y)
CFLAGS  += -DCONFIG_RTL_92D_SUPPORT 
NEWADDEDCFLAGS  += -DCONFIG_RTL_92D_SUPPORT 
endif

ifeq ($(CONFIG_RTL_92D_DMDP),y)
CFLAGS  += -DCONFIG_RTL_92D_DMDP
NEWADDEDCFLAGS  += -DCONFIG_RTL_92D_DMDP
endif

ifeq ($(CONFIG_ENABLE_EFUSE),y)
#mark by timlee 20100826
ifndef VOIP_SUPPORT 
CFLAGS += -DWLAN_MAC_FROM_EFUSE
NEWADDEDCFLAGS += -DWLAN_MAC_FROM_EFUSE
endif
endif


ifeq ($(CONFIG_RTL_FAST_FILTER), y)
CFLAGS += -DCONFIG_RTL_FAST_FILTER 
endif


ifeq ($(CONFIG_RTL_DUAL_PCIESLOT_BIWLAN),y)
CFLAGS  += -DCONFIG_RTL_DUAL_PCIESLOT_BIWLAN
NEWADDEDCFLAGS  += -DCONFIG_RTL_DUAL_PCIESLOT_BIWLAN
CONFIG_FILE = config-gw-98-biwlan.txt
CONFIG_DAT = config-gw-98-biwlan.dat
endif

ifeq ($(CONFIG_RTL_8198_GW),y)
ifeq ($(CONFIG_RTL_92D_DMDP),y)
CONFIG_FILE = config-gw-98-92d.txt 
CONFIG_DAT = config-gw-98-92d.dat
endif
endif

ifeq ($(CONFIG_RTL_DUAL_PCIESLOT_BIWLAN_D), y)
CONFIG_FILE = config-gw-98-92c-92d.txt
CONFIG_DAT = config-gw-98-92c-92d.dat
endif


ifeq ($(CONFIG_RTL_8196C_GW),y)
ifeq ($(CONFIG_RTL_92D_DMDP),y)
CONFIG_FILE = config-gw-96c-92d.txt 
CONFIG_DAT = config-gw-96c-92d.dat
endif
endif

ifeq ($(CONFIG_POCKET_ROUTER_SUPPORT),y)
ifeq ($(CONFIG_DOMAIN_NAME_QUERY_SUPPORT),y)
ifeq ($(CONFIG_RTL_92D_DMDP),y)
CONFIG_FILE = config-gw-96c-pocket-92d.txt 
CONFIG_DAT = config-gw-96c-pocket-92d.dat
endif
endif
endif


#zj: add for QoS
ifeq ($(GW),1)
	GATEWAY += -DENABLE_QOS
#	ifneq ($(CONFIG_QOS_UI_BY_BANDWIDTH),n)
#	ifneq ($(CONFIG_QOS_UI_BY_BANDWIDTH),)
                GATEWAY += -DQOS_BY_BANDWIDTH
#	endif
#	endif
endif


ifdef VOIP_SUPPORT
PWD := $(shell pwd)
VOIP_APP = $(PWD)/../../rtk_voip
VOIP_AP_FILES = voip_flash_ap.o voip_flash_mib_ap.o voip_flash_tool_ap.o voip_flash_server_ap.o
VOIP_GW_FILES = voip_flash_gw.o voip_flash_mib_gw.o voip_flash_tool_gw.o voip_flash_server_gw.o
VOIP_VPN_FILES = voip_flash_vpn.o voip_flash_mib_vpn.o voip_flash_tool_vpn.o voip_flash_server_vpn.o
REALTEK_AP_FILES += $(VOIP_APP)/web/libweb_voip.a $(VOIP_AP_FILES)
REALTEK_GW_FILES += $(VOIP_APP)/web/libweb_voip.a $(VOIP_GW_FILES)
REALTEK_VPN_FILES += $(VOIP_APP)/web/libweb_voip.a $(VOIP_VPN_FILES)
VOIP_FLAGS = -DVOIP_SUPPORT -I$(VOIP_APP)/includes -I$(VOIP_APP)/web -I$(PWD) -I$(PWD)/..
ifdef CONFIG_RTK_VOIP_PACKAGE_867X
VOIP_FLAGS += -DATA867x
endif
ifdef CONFIG_RTK_VOIP_IP_PHONE
VOIP_FLAGS += -I$(VOIP_APP)/ui/include
endif
CFLAGS += $(VOIP_FLAGS)
endif


#=============================================================
#added by Jack for Tr-069
#=============================================================
ifdef CONFIG_CWMP_TR069
REALTEK_GW_FILES += fmtr069_gw.o
REALTEK_VPN_FILES += fmtr069_vpn.o
REALTEK_AP_FILES += fmtr069_ap.o
CFLAGS += -DCONFIG_CWMP_TR069
endif

ifdef CONFIG_RTK_VOIP_IP_PHONE
LDFLAGS += -lpthread
else
ifdef CONFIG_CWMP_TR069
LDFLAGS += -lpthread
endif
endif

compile:
ifdef VOIP_SUPPORT
	rm -f $(NAME_GW) $(NAME_AP) $(NAME_VPN)
	make -C $(VOIP_APP)/web -f rtl8186.mak WEB_FLAGS='$(DEBUG) $(CFLAGS) $(IFLAGS)' WEB_DIR=$(PWD)/..
endif
	@make compile2

ifeq ($(CONFIG_RTL_8196C_iNIC),y)
#iNIC no webs ,only need tools to build code
compile2: tools
else

ifeq ($(CONFIG_RTL_8198_INBAND_AP),y)
compile2: tools
else
compile2: $(TARGET)
endif

endif

ifdef CONFIG_RTL_WEBPAGES_IN_ROOTFS
CFLAGS += -DCONFIG_RTL_WEBPAGES_IN_ROOTFS
endif
ifeq ($(APMIB_SHARED),1)
CFLAGS += -DCONFIG_APMIB_SHARED
ifeq ($(AP),1)
APMIB_OBJ := apmib_ap.o mibtbl_ap.o
else
ifeq ($(GW),1)
APMIB_OBJ := apmib_gw.o mibtbl_gw.o
else
ifeq ($(VPN),1)
APMIB_OBJ := apmib_vpn.o mibtbl_vpn.o
endif
endif
endif

APMIB_LIB = apmib.so

$(APMIB_LIB): $(APMIB_OBJ)
	$(CC) -s -shared -o $@ $(APMIB_OBJ)
endif

#
#	Build archive of objects
#
$(ARCH): $(DEPEND_FILES)
	$(AR) $(ARFLAGS) $(ARCH) $?

#
#	Primary link
#
ifeq ($(APMIB_SHARED),1)
$(NAME_VPN): Makefile $(ARCH) $(REALTEK_VPN_FILES) main_vpn.o $(MATRIXSSL) $(APMIB_LIB)
	$(CC) -o $(NAME_VPN) $(DEBUG) $(SYS_FLAGS) \
		$(CFLAGS) $(IFLAGS) \
		main_vpn.o $(ARCH) $(REALTEK_VPN_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@

$(NAME_GW): Makefile $(ARCH) $(REALTEK_GW_FILES) main_gw.o $(MATRIXSSL) $(APMIB_LIB)
	$(CC) -o $(NAME_GW) $(DEBUG) $(SYS_FLAGS) \
		$(CFLAGS) $(IFLAGS) \
		main_gw.o $(ARCH) $(REALTEK_GW_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@

$(NAME_AP): Makefile $(ARCH) $(REALTEK_AP_FILES) main_ap.o $(APMIB_LIB)
	$(CC) -o $(NAME_AP) $(DEBUG) $(SYS_FLAGS) \
		$(CFLAGS) $(IFLAGS) \
		main_ap.o $(ARCH) $(REALTEK_AP_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@

$(FLASH_VPN): Makefile flash_vpn.o $(VOIP_VPN_FILES) $(APMIB_LIB)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) \
		flash_vpn.o $(VOIP_VPN_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@

ifeq ($(CONFIG_RTL_COMAPI_CFGFILE),y)
$(FLASH_GW): Makefile flash_gw.o comapi.o $(VOIP_GW_FILES) $(APMIB_LIB)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) \
		flash_gw.o comapi.o $(VOIP_GW_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@
else
$(FLASH_GW): Makefile flash_gw.o $(VOIP_GW_FILES) $(APMIB_LIB)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		flash_gw.o $(VOIP_GW_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@
endif

$(SYSCONFIG_GW): Makefile sysconf_gw.o $(REALTEK_SYS_GW_FILES) $(APMIB_LIB)
	$(CC) -o $@ $(DEBUG) \
                $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
                sysconf_gw.o $(REALTEK_SYS_GW_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@
 
$(SYSCONFIG_AP): Makefile sysconf_ap.o $(REALTEK_SYS_AP_FILES) $(APMIB_LIB)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		sysconf_ap.o $(REALTEK_SYS_AP_FILES) $(LDFLAGS) $(APMIB_LIB)
                
$(INTERNET_PPP): Makefile ppp_inet.o $(REALTEK_INTERNET_PPP_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		ppp_inet.o $(REALTEK_INTERNET_PPP_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
        
$(INTERNET_NTP): Makefile ntp_inet.o $(REALTEK_INTERNET_NTP_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		ntp_inet.o $(REALTEK_INTERNET_NTP_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
                
$(INTERNET_DDNS): Makefile ddns_inet.o $(REALTEK_INTERNET_DDNS_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		ddns_inet.o $(REALTEK_INTERNET_DDNS_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

$(FLASH_AP): Makefile flash_ap.o $(VOIP_AP_FILES) $(APMIB_LIB)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		flash_ap.o $(VOIP_AP_FILES) $(LDFLAGS) $(APMIB_LIB)
	rsdk-linux-strip $@
else
$(NAME_VPN): Makefile $(ARCH) $(REALTEK_VPN_FILES) main_vpn.o $(MATRIXSSL)
	$(CC) -o $(NAME_VPN) $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		main_vpn.o $(ARCH) $(REALTEK_VPN_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

$(NAME_GW): Makefile $(ARCH) $(REALTEK_GW_FILES) main_gw.o $(MATRIXSSL)
	$(CC) -o $(NAME_GW) $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		main_gw.o $(ARCH) $(REALTEK_GW_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

$(NAME_AP): Makefile $(ARCH) $(REALTEK_AP_FILES) main_ap.o
	$(CC) -o $(NAME_AP) $(DEBUG) \
		$(CFLAGS) $(IFLAGS $(SYS_FLAGS)) \
		main_ap.o $(ARCH) $(REALTEK_AP_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

$(FLASH_VPN): Makefile flash_vpn.o apmib_vpn_flash.o mibtbl_vpn.o $(VOIP_VPN_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		flash_vpn.o apmib_vpn_flash.o mibtbl_vpn.o $(VOIP_VPN_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

ifeq ($(CONFIG_RTL_COMAPI_CFGFILE),y)
$(FLASH_GW): Makefile flash_gw.o comapi.o apmib_gw_flash.o mibtbl_gw.o $(VOIP_GW_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		flash_gw.o comapi.o apmib_gw_flash.o mibtbl_gw.o $(VOIP_GW_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
else
$(FLASH_GW): Makefile flash_gw.o apmib_gw_flash.o mibtbl_gw.o $(VOIP_GW_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		flash_gw.o apmib_gw_flash.o mibtbl_gw.o $(VOIP_GW_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
endif

$(SYSCONFIG_GW): Makefile sysconf_gw.o apmib_gw_flash.o mibtbl_gw.o $(REALTEK_SYS_GW_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		sysconf_gw.o apmib_gw_flash.o mibtbl_gw.o $(REALTEK_SYS_GW_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

$(SYSCONFIG_AP): Makefile sysconf_ap.o apmib_ap_flash.o mibtbl_ap.o $(REALTEK_SYS_AP_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		sysconf_ap.o apmib_ap_flash.o mibtbl_ap.o $(REALTEK_SYS_AP_FILES) $(LDFLAGS)
		
$(INTERNET_PPP): Makefile ppp_inet.o $(REALTEK_INTERNET_PPP_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		ppp_inet.o $(REALTEK_INTERNET_PPP_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
	
$(INTERNET_NTP): Makefile ntp_inet.o $(REALTEK_INTERNET_NTP_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		ntp_inet.o $(REALTEK_INTERNET_NTP_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
		
$(INTERNET_DDNS): Makefile ddns_inet.o $(REALTEK_INTERNET_DDNS_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		ddns_inet.o $(REALTEK_INTERNET_DDNS_FILES) $(LDFLAGS)
	rsdk-linux-strip $@

$(FLASH_AP): Makefile flash_ap.o apmib_ap_flash.o mibtbl_ap.o $(VOIP_AP_FILES)
	$(CC) -o $@ $(DEBUG) \
		$(CFLAGS) $(IFLAGS) $(SYS_FLAGS) \
		flash_ap.o apmib_ap_flash.o mibtbl_ap.o $(VOIP_AP_FILES) $(LDFLAGS)
	rsdk-linux-strip $@
endif

webpages-vpn.bin: tools
	find ../web-vpn $(EXCLUDE_ASP) -name "*.*" > web_files
	./compweb vpn web_files webpages-vpn.bin

	
webpages-gw.bin: tools
ifdef CONFIG_CWMP_TR069
	find ../web-gw $(EXCLUDE_ASP) -name "*.*" > web_files
else
	find ../web-gw -path '../*' -not -path '*/.*' $(EXCLUDE_ASP) ! -name share.js ! -name tr069config.asp -name "*.*" > web_files
endif
ifdef CONFIG_RTL_WEBPAGES_IN_ROOTFS
	cat web_files | xargs tar cvfz webpages-gw.gz	
else
	./compweb gw web_files webpages-gw.bin
endif
webpages-ap.bin: tools
ifdef CONFIG_CWMP_TR069
	find ../web-ap $(EXCLUDE_ASP) -name "*.*" > web_files
else
	find ../web-gw/* -path '../*' -not -path '*/.*' $(EXCLUDE_ASP) ! -name share.js ! -name tr069config.asp -name "*.*" > web_files
endif
ifdef CONFIG_RTL_WEBPAGES_IN_ROOTFS
	cat web_files | xargs tar cvfz webpages-ap.gz
endif
	./compweb ap web_files webpages-ap.bin

webpages-cl.bin: tools
	find ../web-cl $(EXCLUDE_ASP) -name "*.*" > web_files
	./compweb cl web_files webpages-cl.bin

$(MATRIXSSL):
	make -C ../matrixssl/src

clean:
	rm -f $(NAME_GW) $(NAME_AP) $(NAME_VPN) $(FLASH_AP) $(FLASH_GW) $(FLASH_VPN) $(ARCH) *.o ../*.o *.bin web_files *.so
	rm -f $(SYSCONFIG_GW) $(SYSCONFIG_AP) $(INTERNET_PPP) $(INTERNET_NTP) $(INTERNET_DDNS)
	make -C ../matrixssl/src clean
	make -f Makefile-tools clean
	make -f Makefile-x86 clean
# =========================================================
# VoIP added by Rock
# =========================================================
ifdef VOIP_SUPPORT
	make -C $(VOIP_APP)/web -f rtl8186.mak clean WEB_DIR=$(PWD)/..
endif

#
#	Dependencies
#
../asp.o:  ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../balloc.o: ../balloc.c ../uemf.h

../base64.o:  ../base64.c ../webs.h ../wsIntrn.h  ../ej.h ../ejIntrn.h ../uemf.h

../cgi.o:  ../webs.h ../wsIntrn.h ../uemf.h

../default.o:  ../default.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../ejlex.o:  ../ejlex.c ../ej.h ../ejIntrn.h ../uemf.h

../ejparse.o:  ../ejparse.c ../ej.h ../ejIntrn.h ../uemf.h

../emfdb.o:  ../emfdb.h ../wsIntrn.h ../uemf.h

../form.o:  ../form.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../h.o:  ../h.c ../uemf.h

../handler.o:  ../handler.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../md5c.o:  ../md5.h ../wsIntrn.h ../uemf.h

../mime.o:  ../mime.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../misc.o:  ../misc.c ../uemf.h

../page.o:  ../page.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../ringq.o:  ../ringq.c ../uemf.h

../rom.o:  ../rom.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../security.o:  ../security.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../sock.o:  ../sock.c ../uemf.h

../sockGen.o:  ../sockGen.c ../uemf.h

../sym.o:  ../sym.c ../uemf.h

../uemf.o:  ../uemf.c ../uemf.h

../um.o:  ../webs.h ../wsIntrn.h ../um.h ../uemf.h

../umui.o:  ../webs.h ../wsIntrn.h ../um.h ../uemf.h

../url.o:  ../url.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../value.o:  ../value.c ../uemf.h

../webrom.o:  ../webrom.c ../webs.h ../wsIntrn.h ../uemf.h

../webs.o:  ../webs.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../websda.o:  ../webs.h ../wsIntrn.h ../websda.h ../uemf.h

../websuemf.o:  ../websuemf.c ../webs.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

../websSSL.o:  ../websSSL.c ../websSSL.h ../wsIntrn.h ../ej.h ../ejIntrn.h ../uemf.h

#../http_files.o:  ../http_files.c ../webs.h ../wsIntrn.h

## new added modules by realtek ---------------
main_gw.o:  main.c ../wsIntrn.h ../webs.h ../ej.h ../ejIntrn.h ../uemf.h apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),1)
apmib_gw.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ -fpic $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<
else
apmib_gw.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<
endif

#fmhttp_files_gw.o: fmhttp_files.c apmib.h apform.h utility.h
#	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
	
fmtcpip_gw.o: fmtcpip.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmddns_gw.o: fmddns.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

utility_gw.o: utility.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),1)
mibtbl_gw.o: mibtbl.c apmib.h apform.h utility.h
	$(CC) -c -o $@ -fpic $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
else
mibtbl_gw.o: mibtbl.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
endif

fmfwall_gw.o: fmfwall.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmipv6_gw.o: fmipv6.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmbt_gw.o: fmbt.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmget_gw.o: fmget.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmwlan_gw.o: fmwlan.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmmgmt_gw.o: fmmgmt.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

version_gw.o: version.c
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

flash_gw.o: flash.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(CONFIG_RTL_COMAPI_CFGFILE),y)
comapi.o: comapi.c apmib.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
endif

sysconf_gw.o: $(SYSCONFIG_DIR)/sysconf.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
	
set_init_gw.o:$(SYSCONFIG_DIR)/set_init.c apmib.h apform.h $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
	
set_firewall_gw.o: $(SYSCONFIG_DIR)/set_firewall.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
	
set_bridge_gw.o: $(SYSCONFIG_DIR)/set_bridge.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(CONFIG_IPV6), y)
set_ipv6_gw.o: $(SYSCONFIG_DIR)/set_ipv6.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
endif
		
set_wlanapp_gw.o:	$(SYSCONFIG_DIR)/set_wlanapp.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

set_wan_gw.o:$(SYSCONFIG_DIR)/set_wan.c apmib.h apform.h $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

set_domain_query_gw.o:$(SYSCONFIG_DIR)/set_domain_query.c apmib.h apform.h $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<


sys_utility_gw.o: $(SYSCONFIG_DIR)/sys_utility.c $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
	
	
ppp_inet.o: $(SYSCONFIG_DIR)/ppp_inet.c $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
	
ntp_inet.o: $(SYSCONFIG_DIR)/ntp_inet.c $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
		
ddns_inet.o: $(SYSCONFIG_DIR)/ddns_inet.c $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
			
convert_gw.o: convert.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<

fmroute_gw.o: fmroute.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmpocketap_gw.o: fmpocketap.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $<
	
fmdomain_query_gw.o: fmdomain_query.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $<


################################################################################
main_vpn.o:  main.c ../wsIntrn.h ../webs.h ../ej.h ../ejIntrn.h ../uemf.h apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),1)
apmib_vpn.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ -fpic $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<
else
apmib_vpn.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<
endif

fmtcpip_vpn.o: fmtcpip.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmddns_vpn.o: fmddns.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

utility_vpn.o: utility.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),1)
mibtbl_vpn.o: mibtbl.c apmib.h apform.h utility.h
	$(CC) -c -o $@ -fpic $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<
else
mibtbl_vpn.o: mibtbl.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<
endif

fmfwall_vpn.o: fmfwall.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmvpn.o: fmvpn.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmget_vpn.o: fmget.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmwlan_vpn.o: fmwlan.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmmgmt_vpn.o: fmmgmt.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

version_vpn.o: version.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

flash_vpn.o: flash.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

convert_vpn.o: convert.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

fmroute_vpn.o: fmroute.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

################################################################################
main_ap.o:  main.c ../wsIntrn.h ../webs.h ../ej.h ../ejIntrn.h ../uemf.h apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),1)
apmib_ap.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ -fpic $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
else
apmib_ap.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
endif

fmtcpip_ap.o: fmtcpip.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

fmfwall_ap.o: fmfwall.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

utility_ap.o: utility.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),1)
mibtbl_ap.o: mibtbl.c apmib.h apform.h utility.h
	$(CC) -c -o $@ -fpic $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
else
mibtbl_ap.o: mibtbl.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
endif

fmget_ap.o: fmget.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

fmwlan_ap.o: fmwlan.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

fmmgmt_ap.o: fmmgmt.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

version_ap.o: version.c
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

flash_ap.o: flash.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

sysconf_ap.o: $(SYSCONFIG_DIR)/sysconf.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
	
set_init_ap.o:$(SYSCONFIG_DIR)/set_init.c apmib.h apform.h $(SYSCONFIG_DIR)/syswan.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
	
set_bridge_ap.o: $(SYSCONFIG_DIR)/set_bridge.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(CONFIG_IPV6), y)
set_ipv6_ap.o: $(SYSCONFIG_DIR)/set_ipv6.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $(SYS_FLAGS) $<
endif
		
set_wlanapp_ap.o:	$(SYSCONFIG_DIR)/set_wlanapp.c apmib.h apform.h $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
	
sys_utility_ap.o: $(SYSCONFIG_DIR)/sys_utility.c $(SYSCONFIG_DIR)/sys_utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<
	
convert_ap.o: convert.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

ifeq ($(APMIB_SHARED),0)
apmib_vpn_flash.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(GATEWAY) $(WLANSUPP) $(NEWADDEDCFLAGS)$(ROUTE) $(VPN) $(VOIP_FLAGS) $(SYS_FLAGS) $(CFLAGS_FLASH) $<

apmib_gw_flash.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(GATEWAY) $(WLANSUPP) $(NEWADDEDCFLAGS) $(ROUTE) $(VOIP_FLAGS) $(SYS_FLAGS) $(CFLAGS_FLASH) $<

apmib_ap_flash.o: apmib.c apmib.h apform.h utility.h
	$(CC) -c -o $@ $(DEBUG) $(WLANSUPP) $(NEWADDEDCFLAGS) $(VOIP_FLAGS) $(SYS_FLAGS) $(CFLAGS_FLASH) $<
endif
## --------------------------------------------
x86:
	make -f Makefile-x86
tools:
	make -f Makefile-tools


release:
	./mksvnver DIR_USERS=$(DIR_USERS) DIR_LINUX=$(DIR_LINUX)

romfs:
	rm -rf *.dat
ifeq ($(CONFIG_RTL_8196C_iNIC),y)
else	# !CONFIG_RTL_8196C_iNIC

ifeq ($(CONFIG_RTL_8198_INBAND_AP),y)
else	# !CONFIG_RTL_8198_INBAND_AP
ifeq ($(CONFIG_RTL_8198_AP_ROOT),y)
	./cvcfg-ap $(CONFIG_FILE) $(CONFIG_DAT)
	$(ROMFSINST) webs-ap /bin/webs
	$(ROMFSINST) flash-ap /bin/flash
	$(ROMFSINST) sysconf-ap /bin/sysconf
else	# !CONFIG_RTL_8198_AP_ROOT
ifndef VOIP_SUPPORT
	./cvcfg-gw $(CONFIG_FILE) $(CONFIG_DAT)
endif
	$(ROMFSINST) webs-gw /bin/webs
	$(ROMFSINST) flash-gw /bin/flash
	$(ROMFSINST) sysconf-gw /bin/sysconf
	$(ROMFSINST) ppp_inet /bin/ppp_inet
	$(ROMFSINST) ntp_inet /bin/ntp_inet
	$(ROMFSINST) ddns_inet /bin/ddns_inet
endif	#CONFIG_RTL_8198_AP_ROOT
endif	#CONFIG_RTL_8198_INBAND_AP
endif	#CONFIG_RTL_8196C_iNIC
ifeq ($(APMIB_SHARED),1)
	$(ROMFSINST) apmib.so /lib/apmib.so
endif
#
#	Transition rules (add -o to put object in right directory)
#
.c.o:
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $(SYS_FLAGS) $<

# =========================================================
# added by Rock
# =========================================================
voip_flash_ap.o: $(VOIP_APP)/flash/voip_flash.c $(VOIP_APP)/includes/voip_flash.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $<

voip_flash_gw.o: $(VOIP_APP)/flash/voip_flash.c $(VOIP_APP)/includes/voip_flash.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<

voip_flash_vpn.o: $(VOIP_APP)/flash/voip_flash.c $(VOIP_APP)/includes/voip_flash.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $<

voip_flash_mib_ap.o: $(VOIP_APP)/flash/voip_flash_mib.c $(VOIP_APP)/includes/voip_flash_mib.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $<

voip_flash_mib_gw.o: $(VOIP_APP)/flash/voip_flash_mib.c $(VOIP_APP)/includes/voip_flash_mib.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<

voip_flash_mib_vpn.o: $(VOIP_APP)/flash/voip_flash_mib.c $(VOIP_APP)/includes/voip_flash_mib.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $<

voip_flash_tool_ap.o: $(VOIP_APP)/flash/voip_flash_tool.c $(VOIP_APP)/includes/voip_flash_tool.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $<

voip_flash_tool_gw.o: $(VOIP_APP)/flash/voip_flash_tool.c $(VOIP_APP)/includes/voip_flash_tool.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<

voip_flash_tool_vpn.o: $(VOIP_APP)/flash/voip_flash_tool.c $(VOIP_APP)/includes/voip_flash_tool.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $<

voip_flash_server_ap.o: $(VOIP_APP)/flash/voip_flash_server.c $(VOIP_APP)/includes/voip_flash.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(IFLAGS) $<

voip_flash_server_gw.o: $(VOIP_APP)/flash/voip_flash_server.c $(VOIP_APP)/includes/voip_flash.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(IFLAGS) $<

voip_flash_server_vpn.o: $(VOIP_APP)/flash/voip_flash_server.c $(VOIP_APP)/includes/voip_flash.h
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $<

#===========================================================================
#added by Jack for TR-069
#===========================================================================
fmtr069_gw.o: fmtr069.c
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<
fmtr069_vpn.o: fmtr069.c
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<
fmtr069_ap.o: fmtr069.c
	$(CC) -c -o $@ $(DEBUG) $(CFLAGS) $(GATEWAY) $(VPN) $(IFLAGS) $(SYS_FLAGS) $<

